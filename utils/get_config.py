import torchvisionfrom torchvision.transforms import transformsfrom models.resnet import *def get_dataset(args):    dataset_train, dataset_test = None, None    if args.dataset == "mnist":        train_transform = transforms.Compose([            transforms.ToTensor(),            transforms.Normalize([0.5], [0.5])        ])        test_transform = transforms.Compose([            transforms.ToTensor(),            transforms.Normalize([0.5], [0.5])        ])        dataset_train = torchvision.datasets.MNIST(root="./datasets/mnist", train=True, download=True, transform=train_transform)        dataset_test = torchvision.datasets.MNIST(root="./datasets/mnist", train=False, download=True, transform=test_transform)    elif args.dataset == "cifar10":        train_transform = transforms.Compose([            transforms.RandomCrop(32, padding=4),            transforms.RandomHorizontalFlip(),            transforms.ToTensor(),            transforms.Normalize((0.4914, 0.4822, 0.4465), (0.247, 0.243, 0.261))        ])        test_transform = transforms.Compose([            transforms.ToTensor(),            transforms.Normalize((0.4914, 0.4822, 0.4465), (0.247, 0.243, 0.261))        ])        dataset_train = torchvision.datasets.CIFAR10(root="./datasets/cifar10", train=True, download=True, transform=train_transform)        dataset_test = torchvision.datasets.CIFAR10(root="./datasets/cifar10", train=False, download=True, transform=test_transform)    return dataset_train, dataset_testdef get_model(args):    model = None    if args.model == "resnet":        model = resnet18(num_classes=10)    return model